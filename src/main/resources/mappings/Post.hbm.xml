<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="sections.feed.posts.entities">

    <class name="sections.feed.posts.entities.Post" table="Posts">
        <id name="postId" column="post_id">
            <generator class="identity" />
        </id>
        <property name="authorId"/>
        <property name="authorName"/>
        <property name="organizationName" length="2000"/>
        <property name="postContent" length="15000">
            <column name="postContent" sql-type="text"></column>
        </property>
        <!--<property name="postExcerpt" length="500"/>-->
        <property name="publishDate"/>
        <property name="status" length="20"/>

        <set name="files" table="PostFiles" fetch="join" lazy="false" cascade="all">
            <key>
                <column name="post_id" not-null="true"/>
            </key>
            <!--<one-to-many class="utils.files-->
            <many-to-many class="utils.files.File">
                <column name="file_id" not-null="true"/>
            </many-to-many>
        </set>

        <set name="photos" table="PostPhotos" fetch="join" lazy="false" cascade="all">
            <key>
                <column name="post_id" not-null="true"/>
            </key>
            <many-to-many class="utils.images.Photo">
                <column name="photo_id" not-null="true"/>
            </many-to-many>
        </set>




        <!--<many-to-one name="album" class="sections.feed.posts.entities.AttachedAlbum"-->
                     <!--column="attAlbum_id" unique="true" not-null="true"-->
                     <!--cascade="all" />-->


        <!--<set name="products" inverse="true" cascade="all">-->
            <!--<key column="CATEGORY_ID" not-null="true" />-->
            <!--<one-to-many class="Product"/>-->
        <!--</set>-->

        <!--<one-to-one name="album" class="sections.feed.posts.entities.AttachedAlbum" cascade="all"/>-->

        <!--<set name="videos" table="PostVideos" fetch="join" lazy="false" inverse="true" cascade="all">-->
            <!--<key>-->
                <!--<column name="post_id" not-null="true"/>-->
            <!--</key>-->
            <!--<many-to-many entity-name="model.entities.Video">-->
                <!--<column name="video_id" not-null="true"/>-->
            <!--</many-to-many>-->
        <!--</set>-->

        <!--фотки можно загрузить при визуализации, изза возможности поста быть слишком большим по тексту-->

        <!--<set name="photos" table="PostPhotos" fetch="join" lazy="false" inverse="true" cascade="all">-->
        <!--<key>-->
        <!--<column name="post_id" not-null="true"/>-->
        <!--</key>-->
        <!--<many-to-many entity-name="utils.images.Photo">-->
        <!--<column name="photo_id" not-null="true"/>-->
        <!--</many-to-many>-->
        <!--</set>-->

        <!--
    private Long id;
    private Long authorId;
    private String authorName;
    private String organizationName;
    private Date publishDate;
    private String postContent;
    private String postExcerpt;
    private String status;
    private Set<File> files;
    private Long albumId;-->
    </class>
</hibernate-mapping>